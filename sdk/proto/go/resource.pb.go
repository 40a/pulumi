// Code generated by protoc-gen-go.
// source: resource.proto
// DO NOT EDIT!

package pulumirpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// RegisterResourceRequest contains information about a resource object that was newly allocated.
type RegisterResourceRequest struct {
	Type   string                  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name   string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Parent string                  `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	Custom bool                    `protobuf:"varint,4,opt,name=custom" json:"custom,omitempty"`
	Object *google_protobuf.Struct `protobuf:"bytes,5,opt,name=object" json:"object,omitempty"`
}

func (m *RegisterResourceRequest) Reset()                    { *m = RegisterResourceRequest{} }
func (m *RegisterResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterResourceRequest) ProtoMessage()               {}
func (*RegisterResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *RegisterResourceRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RegisterResourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterResourceRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *RegisterResourceRequest) GetCustom() bool {
	if m != nil {
		return m.Custom
	}
	return false
}

func (m *RegisterResourceRequest) GetObject() *google_protobuf.Struct {
	if m != nil {
		return m.Object
	}
	return nil
}

// RegisterResourceResponse reflects back the properties initialized during creation, if applicable.
type RegisterResourceResponse struct {
	Urn string `protobuf:"bytes,1,opt,name=urn" json:"urn,omitempty"`
}

func (m *RegisterResourceResponse) Reset()                    { *m = RegisterResourceResponse{} }
func (m *RegisterResourceResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResourceResponse) ProtoMessage()               {}
func (*RegisterResourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *RegisterResourceResponse) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

// CompleteResourceRequest completes the registration of a resource, and optionally adds extra derived output
// properties to an existing resource that is in flight.  It must be called once per registration.
type CompleteResourceRequest struct {
	Urn    string                  `protobuf:"bytes,1,opt,name=urn" json:"urn,omitempty"`
	Extras *google_protobuf.Struct `protobuf:"bytes,2,opt,name=extras" json:"extras,omitempty"`
}

func (m *CompleteResourceRequest) Reset()                    { *m = CompleteResourceRequest{} }
func (m *CompleteResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CompleteResourceRequest) ProtoMessage()               {}
func (*CompleteResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *CompleteResourceRequest) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

func (m *CompleteResourceRequest) GetExtras() *google_protobuf.Struct {
	if m != nil {
		return m.Extras
	}
	return nil
}

// CompleteResourceResponse is returned by the engine after a resource is completed.  It includes any state
// that was populated by the resource provider so that the language engine can blit it into the resource objects.
type CompleteResourceResponse struct {
	Id      string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Object  *google_protobuf.Struct `protobuf:"bytes,2,opt,name=object" json:"object,omitempty"`
	Stable  bool                    `protobuf:"varint,3,opt,name=stable" json:"stable,omitempty"`
	Stables []string                `protobuf:"bytes,4,rep,name=stables" json:"stables,omitempty"`
}

func (m *CompleteResourceResponse) Reset()                    { *m = CompleteResourceResponse{} }
func (m *CompleteResourceResponse) String() string            { return proto.CompactTextString(m) }
func (*CompleteResourceResponse) ProtoMessage()               {}
func (*CompleteResourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *CompleteResourceResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CompleteResourceResponse) GetObject() *google_protobuf.Struct {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *CompleteResourceResponse) GetStable() bool {
	if m != nil {
		return m.Stable
	}
	return false
}

func (m *CompleteResourceResponse) GetStables() []string {
	if m != nil {
		return m.Stables
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterResourceRequest)(nil), "pulumirpc.RegisterResourceRequest")
	proto.RegisterType((*RegisterResourceResponse)(nil), "pulumirpc.RegisterResourceResponse")
	proto.RegisterType((*CompleteResourceRequest)(nil), "pulumirpc.CompleteResourceRequest")
	proto.RegisterType((*CompleteResourceResponse)(nil), "pulumirpc.CompleteResourceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ResourceMonitor service

type ResourceMonitorClient interface {
	Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*InvokeResponse, error)
	RegisterResource(ctx context.Context, in *RegisterResourceRequest, opts ...grpc.CallOption) (*RegisterResourceResponse, error)
	CompleteResource(ctx context.Context, in *CompleteResourceRequest, opts ...grpc.CallOption) (*CompleteResourceResponse, error)
}

type resourceMonitorClient struct {
	cc *grpc.ClientConn
}

func NewResourceMonitorClient(cc *grpc.ClientConn) ResourceMonitorClient {
	return &resourceMonitorClient{cc}
}

func (c *resourceMonitorClient) Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*InvokeResponse, error) {
	out := new(InvokeResponse)
	err := grpc.Invoke(ctx, "/pulumirpc.ResourceMonitor/Invoke", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceMonitorClient) RegisterResource(ctx context.Context, in *RegisterResourceRequest, opts ...grpc.CallOption) (*RegisterResourceResponse, error) {
	out := new(RegisterResourceResponse)
	err := grpc.Invoke(ctx, "/pulumirpc.ResourceMonitor/RegisterResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceMonitorClient) CompleteResource(ctx context.Context, in *CompleteResourceRequest, opts ...grpc.CallOption) (*CompleteResourceResponse, error) {
	out := new(CompleteResourceResponse)
	err := grpc.Invoke(ctx, "/pulumirpc.ResourceMonitor/CompleteResource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResourceMonitor service

type ResourceMonitorServer interface {
	Invoke(context.Context, *InvokeRequest) (*InvokeResponse, error)
	RegisterResource(context.Context, *RegisterResourceRequest) (*RegisterResourceResponse, error)
	CompleteResource(context.Context, *CompleteResourceRequest) (*CompleteResourceResponse, error)
}

func RegisterResourceMonitorServer(s *grpc.Server, srv ResourceMonitorServer) {
	s.RegisterService(&_ResourceMonitor_serviceDesc, srv)
}

func _ResourceMonitor_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceMonitorServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pulumirpc.ResourceMonitor/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceMonitorServer).Invoke(ctx, req.(*InvokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceMonitor_RegisterResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceMonitorServer).RegisterResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pulumirpc.ResourceMonitor/RegisterResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceMonitorServer).RegisterResource(ctx, req.(*RegisterResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceMonitor_CompleteResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceMonitorServer).CompleteResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pulumirpc.ResourceMonitor/CompleteResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceMonitorServer).CompleteResource(ctx, req.(*CompleteResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceMonitor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pulumirpc.ResourceMonitor",
	HandlerType: (*ResourceMonitorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _ResourceMonitor_Invoke_Handler,
		},
		{
			MethodName: "RegisterResource",
			Handler:    _ResourceMonitor_RegisterResource_Handler,
		},
		{
			MethodName: "CompleteResource",
			Handler:    _ResourceMonitor_CompleteResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resource.proto",
}

func init() { proto.RegisterFile("resource.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0xcb, 0x4e, 0xeb, 0x30,
	0x14, 0x6c, 0xd2, 0xde, 0xdc, 0xf6, 0x5c, 0xa9, 0xb7, 0xf2, 0x82, 0x9a, 0x88, 0x45, 0x14, 0x36,
	0x59, 0xa0, 0x54, 0x2a, 0x1f, 0xc0, 0x82, 0x15, 0x0b, 0x36, 0x66, 0x0b, 0x8b, 0x24, 0x3d, 0x54,
	0x81, 0x24, 0x36, 0x7e, 0x54, 0xf0, 0x11, 0x48, 0x7c, 0x03, 0x5f, 0x8a, 0x12, 0xbb, 0xa8, 0x0f,
	0x5a, 0xb1, 0x3b, 0x67, 0x3c, 0x1e, 0xcd, 0x8c, 0x0d, 0x63, 0x89, 0x8a, 0x1b, 0x59, 0x60, 0x2a,
	0x24, 0xd7, 0x9c, 0x8c, 0x84, 0xa9, 0x4c, 0x5d, 0x4a, 0x51, 0x84, 0x67, 0x4b, 0xce, 0x97, 0x15,
	0xce, 0xba, 0x83, 0xdc, 0x3c, 0xce, 0x94, 0x96, 0xa6, 0xd0, 0x96, 0x18, 0x8e, 0x85, 0xe4, 0xab,
	0x72, 0x81, 0xd2, 0xee, 0xf1, 0xa7, 0x07, 0x53, 0x86, 0xcb, 0x52, 0x69, 0x94, 0xcc, 0x69, 0x32,
	0x7c, 0x31, 0xa8, 0x34, 0x21, 0x30, 0xd0, 0x6f, 0x02, 0xa9, 0x17, 0x79, 0xc9, 0x88, 0x75, 0x73,
	0x8b, 0x35, 0x59, 0x8d, 0xd4, 0xb7, 0x58, 0x3b, 0x93, 0x13, 0x08, 0x44, 0x26, 0xb1, 0xd1, 0xb4,
	0xdf, 0xa1, 0x6e, 0x6b, 0xf1, 0xc2, 0x28, 0xcd, 0x6b, 0x3a, 0x88, 0xbc, 0x64, 0xc8, 0xdc, 0x46,
	0x66, 0x10, 0xf0, 0xfc, 0x09, 0x0b, 0x4d, 0xff, 0x44, 0x5e, 0xf2, 0x6f, 0x3e, 0x4d, 0xad, 0xe5,
	0x74, 0x6d, 0x39, 0xbd, 0xeb, 0x2c, 0x33, 0x47, 0x8b, 0x2f, 0x80, 0xee, 0x7b, 0x54, 0x82, 0x37,
	0x0a, 0xc9, 0x04, 0xfa, 0x46, 0x36, 0xce, 0x63, 0x3b, 0xc6, 0xf7, 0x30, 0xbd, 0xe6, 0xb5, 0xa8,
	0x50, 0xe3, 0x6e, 0xa2, 0x3d, 0x72, 0xeb, 0x05, 0x5f, 0xb5, 0xcc, 0x54, 0x97, 0xe8, 0x98, 0x17,
	0x4b, 0x8b, 0xdf, 0x3d, 0xa0, 0xfb, 0xf2, 0xce, 0xcc, 0x18, 0xfc, 0x72, 0xe1, 0xe4, 0xfd, 0x72,
	0xb1, 0x91, 0xd4, 0xff, 0x55, 0xd2, 0xb6, 0x32, 0xa5, 0xb3, 0xbc, 0xc2, 0xae, 0xca, 0x21, 0x73,
	0x1b, 0xa1, 0xf0, 0xd7, 0x4e, 0x8a, 0x0e, 0xa2, 0x7e, 0x32, 0x62, 0xeb, 0x75, 0xfe, 0xe1, 0xc3,
	0xff, 0xb5, 0x8f, 0x5b, 0xde, 0x94, 0x9a, 0x4b, 0x72, 0x05, 0xc1, 0x4d, 0xb3, 0xe2, 0xcf, 0x48,
	0x68, 0xfa, 0xfd, 0x31, 0x52, 0x0b, 0xb9, 0x2a, 0xc2, 0xd3, 0x1f, 0x4e, 0x6c, 0x8a, 0xb8, 0x47,
	0x1e, 0x60, 0xb2, 0x5b, 0x38, 0x89, 0x37, 0x2e, 0x1c, 0xf8, 0x31, 0xe1, 0xf9, 0x51, 0xce, 0xa6,
	0xfc, 0x6e, 0x85, 0x5b, 0xf2, 0x07, 0x9e, 0x6f, 0x4b, 0xfe, 0xd0, 0x1b, 0xc4, 0xbd, 0x3c, 0xe8,
	0xda, 0xbd, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xb6, 0x99, 0xaa, 0x25, 0x03, 0x00, 0x00,
}
