// *** WARNING: this file was generated by the Coconut IDL Compiler (CIDLC).  ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as coconut from "@coconut/coconut";

export let DedicatedTenancy: InstanceTenancy = "dedicated";
export let DefaultTenancy: InstanceTenancy = "default";
export let HostTenancy: InstanceTenancy = "host";

export type InstanceTenancy =
    "dedicated" |
    "default" |
    "host";

export class VPC extends coconut.Resource implements VPCArgs {
    public readonly name: string;
    public readonly cidrBlock: string;
    public readonly instanceTenancy?: InstanceTenancy;
    public enableDnsSupport?: boolean;
    public enableDnsHostnames?: boolean;

    constructor(name: string, args: VPCArgs) {
        super();
        if (name === undefined) {
            throw new Error("Missing required resource name");
        }
        this.name = name;
        if (args.cidrBlock === undefined) {
            throw new Error("Missing required argument 'cidrBlock'");
        }
        this.cidrBlock = args.cidrBlock;
        this.instanceTenancy = args.instanceTenancy;
        this.enableDnsSupport = args.enableDnsSupport;
        this.enableDnsHostnames = args.enableDnsHostnames;
    }
}

export interface VPCArgs {
    readonly cidrBlock: string;
    readonly instanceTenancy?: InstanceTenancy;
    enableDnsSupport?: boolean;
    enableDnsHostnames?: boolean;
}


