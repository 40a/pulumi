name: aws/ec2/route
description: A route in a route table within a VPC.
website: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
properties:
    destinationCidrBlock:
        type: string
        description: The CIDR address block used for the destination match.  For example, `0.0.0.0/0`.  Routing
            decisions are based on the most specific match.
        readonly: true
    routeTable:
        type: aws/ec2/routeTable
        description: The route table where the route will be added.
        readonly: true
    # TODO(joe): the CF docs lump internetGateway and vpnGateway underneath the same gatewayId property.  And it is a
    #     requirement that you pass only one of gatewayId, instanceId, natGatewayId, networkInterfaceId, or
    #     vpcPeeringConnectionId.  Ideally we would leverage custom schema types for this.  In other words, we could
    #     have a "gateway" type that was either internetGateway or vpnGateway, and also required the attachment; then we
    #     could have a "routeTarget" type that was either a gateway or any of these other options.
    internetGateway:
        type: aws/ec2/internetGateway
        description: The Internet gateway that is attached to your VPC.  For route entries that specify a gateway, you
            must also specify a dependency on the gateway attachment resource (`vpcGatewayAttachment`).
        optional: true
    vpcGatewayAttachment:
        type: aws/ec2/vpcGatewayAttachment
        description: The gateway attachment resource that attached the specified gateway to the VPC.
        optional: true
    # TODO[marapongo/mu#27]: project more of the AWS CF types; until then, this remains commented out.
    # vpnGateway:
    #     type: aws/ec2/vpnGateway
    #     description: The VPN gateway that is attached to your VPC.  For route entries that specify a gateway, you must
    #         also specify a dependency on the gateway attachment resource (`vpcGatewayAttachment`).
    #     optional: true
    # instance:
    #     type: aws/ec2/instance
    #     description: A NAT instance in your VPC.
    #     optional: true
    # natGateway:
    #     type: aws/ec2/natGateway
    #     description: A NAT gateway.
    #     optional: true
    # networkInterface:
    #     type: aws/ec2/networkInterface
    #     description: Allows the routing of network interfaces.
    #     optional: true
    # vpcPeeringConnection:
    #     type: aws/ec2/vpcPeeringConnection
    #     description: a VPC peering connection.
    #     optional: true
services:
    {{if has .Properties "internetGateway" -}}
    {{- require (has .Properties "vpcGatewayAttachment") "A gateway attachment is required" -}}
    {{- else if has .Properties "vpnGateway" -}}
    {{- require (has .Properties "vpcGatewayAttachment") "A gateway attachment is required" -}}
    {{- else if has .Properties "instance" -}}
    {{- else if has .Properties "natGateway" -}}
    {{- else if has .Properties "networkInterface" -}}
    {{- else if has .Properties "vpcPeeringConnection" -}}
    {{- else -}}
    {{- panic "Expected one of the gateway/target properties to have been set" -}}
    {{- end}}
    public:
        self:
            type: aws/x/cf
            resource: "AWS::EC2::Route"
            {{if has .Properties "vpcGatewayAttachment" -}}
            dependsOn:
                - vpcGatewayAttachment
            {{- end}}
            properties:
                DestinationCidrBlock: destinationCidrBlock
                RouteTableId: routeTable
                InternetGatewayId: internetGateway
                VpnGatewayId: vpnGateway
                InstanceId: instance
                NatGatewayId: natGateway
                NetworkInterfaceId: networkInterface
                VpcPeeringConnectionId: vpcPeeringConnection
    
